import{d as Y,m as T,x as Z,r as C,o as ee,y as te,u as se,c as u,a as d,b as t,n as v,C as oe,w as r,h as f,z as I,B as $,i as p,v as x,e as V,A as ae,s as L,F as A,f as q,t as c,l as ie,p as D,j as ne,q as le,k as l,_ as ue}from"./index-BjxzjUKN.js";import{g as re}from"./questions-BBaXMyyM.js";const de={class:"edit-tabs"},ve={class:"form-group"},pe={class:"form-group"},me={class:"form-group"},ce=["onKeydown"],ge={key:0,class:"tags-preview"},fe=["onClick"],ye={class:"form-actions"},we={class:"questions-header"},Ce={class:"filters-grid mb-4"},Me={key:0},Se={key:1},xe={key:2,class:"question-list"},ke={class:"question-item-header"},Te={class:"question-id"},be={class:"tag q-type"},Ae={class:"question-text"},qe={key:0,class:"options-list"},Qe={key:1},$e={class:"form-group"},Ne={class:"ai-mix-counts"},Ee={class:"form-group"},he={class:"form-group"},Ie={class:"form-group"},Ve={class:"total-questions"},Le={class:"form-actions ai-actions"},De={key:0,class:"ai-status"},Ue=Y({__name:"EditSetView",setup(_e){const U=Z(),_=se(),k=T(()=>U.params.id==="new"),N=T(()=>U.params.id),w=C("modify"),a=C({id:k.value?void 0:N.value,title:"",description:"",tags:[],questionCount:0}),m=C([]),B=C(!1),E=C(!1),Q=C(""),n=C({type:"",answerType:"",tag:"",search:""}),i=C({topic:"",mixCount:{write:0,mcqSingle:20,mcqMulti:0}}),M=C(null),F=T(()=>a.value.title||"New Set"),P=()=>{const o=Q.value.split(",").map(e=>e.trim()).filter(e=>e!==""&&!(a.value.tags??[]).includes(e));o.length>0&&(a.value.tags=[...a.value.tags??[],...o]),Q.value=""},O=o=>{a.value.tags=(a.value.tags??[]).filter(e=>e!==o)},G=T(()=>m.value.filter(o=>{const e=!n.value.type||o.questionType===n.value.type,g=!n.value.answerType||o.answerType===n.value.answerType,s=!n.value.tag||o.tags&&o.tags.includes(n.value.tag),y=!n.value.search||o.text.toLowerCase().includes(n.value.search.toLowerCase())||o.options&&o.options.some(b=>b.toLowerCase().includes(n.value.search.toLowerCase()))||o.correctAnswers.some(b=>b.toLowerCase().includes(n.value.search.toLowerCase()));return e&&g&&s&&y})),W=T(()=>{const o=new Set;return m.value.forEach(e=>{var g;(g=e.tags)==null||g.forEach(s=>o.add(s))}),Array.from(o).sort()}),S=T(()=>(i.value.mixCount.write||0)+(i.value.mixCount.mcqSingle||0)+(i.value.mixCount.mcqMulti||0)),z=async()=>{if(S.value===0||!i.value.topic)return;if(console.log("Generating AI questions with config:",JSON.stringify(i.value)),M.value=`Generating ${S.value} questions for topic "${i.value.topic}"... (Mock)`,await new Promise(e=>setTimeout(e,2500)),Math.random()>.15){M.value=`Successfully generated ${S.value} questions (Mock). They would be added to the 'Manage Questions' list.`;const e=[];for(let g=0;g<S.value;g++)e.push({id:`ai_${Date.now()}_${g}`,setId:a.value.id,text:`AI Generated Question ${g+1} about ${i.value.topic}`,questionType:"MCQ",answerType:"SINGLE",options:["Option A","Option B","Option C"],correctAnswers:["Option A"],tags:["ai-generated",i.value.topic.toLowerCase()]});m.value=[...m.value,...e],a.value.questionCount=m.value.length}else M.value="Failed to generate questions from AI (Mock). Please check the topic or try again."},j=()=>{const o=`Generate a set of ${S.value} questions about the topic "${i.value.topic}".
Mix:
- ${i.value.mixCount.write||0} Write Answer questions.
- ${i.value.mixCount.mcqSingle||0} Multiple Choice (Single Correct Answer) questions.
- ${i.value.mixCount.mcqMulti||0} Multiple Choice (Multiple Correct Answers) questions.
Provide the question text, options (for MCQ), and the correct answer(s) for each. Format as JSON or a clear list.`;navigator.clipboard.writeText(o).then(()=>{M.value="AI prompt copied to clipboard.",setTimeout(()=>M.value=null,3e3)}).catch(e=>{console.error("Failed to copy AI prompt: ",e),M.value="Error copying prompt."})};ee(async()=>{k.value?w.value="modify":await J()});const J=async()=>{B.value=!0,E.value=!0;try{const o=await te(N.value);o?(a.value={...o},m.value=await re(N.value),a.value.questionCount=m.value.length):(console.error("Set not found"),_.push({name:"NotFound"}))}catch(o){console.error("Error loading set data:",o)}finally{B.value=!1,E.value=!1}},K=()=>{if(console.log("Saving set details:",JSON.stringify(a.value)),alert("Mock: Set details saved!"),k.value&&!a.value.id){const o=`set_${Date.now()}`;a.value.id=o,_.replace({name:"edit-set",params:{id:o}}),w.value="questions"}},h=o=>{if(k.value&&!a.value.id&&(o==="questions"||o==="generate")){alert("Please save the set details first before adding questions or generating.");return}w.value=o},R=()=>{if(k.value&&!a.value.id){alert("Please save the set details first.");return}console.log("Adding new question for set:",a.value.id);const o={id:`new_${Date.now()}`,setId:a.value.id,text:"New Manual Question - Click Edit",questionType:"TEXT",answerType:"SINGLE",correctAnswers:["Change me"],tags:[]};m.value.push(o),a.value.questionCount=m.value.length,alert("Mock: Added dummy question. Click Edit to modify. Real app would navigate/show modal.")},X=o=>{console.log(`Editing question ${o}`),alert(`Mock: Navigating to Edit Question screen for ${o}...`)},H=o=>{confirm(`Are you sure you want to delete question ${o}?`)&&(m.value=m.value.filter(e=>e.id!==o),a.value.questionCount=m.value.length,alert(`Mock: Question ${o} deleted.`))};return(o,e)=>{const g=ie("router-link");return l(),u("div",null,[d(oe,{title:k.value?"Create New Set":`Edit Set: ${F.value}`},null,8,["title"]),t("div",de,[d(f,{variant:w.value==="modify"?"primary":"light",onClick:e[0]||(e[0]=s=>h("modify"))},{default:r(()=>e[14]||(e[14]=[p(" Modify Set Details ")])),_:1},8,["variant"]),d(f,{variant:w.value==="questions"?"primary":"light",onClick:e[1]||(e[1]=s=>h("questions"))},{default:r(()=>e[15]||(e[15]=[p(" Manage Questions ")])),_:1},8,["variant"]),d(f,{variant:w.value==="generate"?"primary":"light",onClick:e[2]||(e[2]=s=>h("generate"))},{default:r(()=>e[16]||(e[16]=[p(" Generate (AI) ")])),_:1},8,["variant"]),d(f,{variant:"light",disabled:""},{default:r(()=>e[17]||(e[17]=[p("Import from your notes - Soon")])),_:1})]),v(d($,{class:"tab-content"},{default:r(()=>[t("form",{onSubmit:L(K,["prevent"])},[t("div",ve,[e[18]||(e[18]=t("label",{for:"setName"},"Set Name *",-1)),v(t("input",{type:"text",id:"setName","onUpdate:modelValue":e[3]||(e[3]=s=>a.value.title=s),required:""},null,512),[[x,a.value.title]])]),t("div",pe,[e[19]||(e[19]=t("label",{for:"setDescription"},"Description",-1)),v(t("textarea",{id:"setDescription",rows:"4","onUpdate:modelValue":e[4]||(e[4]=s=>a.value.description=s)},null,512),[[x,a.value.description]])]),t("div",me,[e[20]||(e[20]=t("label",{for:"setTags"},"Set Tags (comma-separated)",-1)),v(t("input",{type:"text",id:"setTags","onUpdate:modelValue":e[5]||(e[5]=s=>Q.value=s),onKeydown:ae(L(P,["prevent"]),["enter"]),placeholder:"e.g., biology, cell, mitosis"},null,40,ce),[[x,Q.value]]),a.value.tags&&a.value.tags.length>0?(l(),u("div",ge,[(l(!0),u(A,null,q(a.value.tags,s=>(l(),u("span",{key:s,class:"tag"},[p(c(s)+" ",1),t("button",{type:"button",onClick:y=>O(s),class:"remove-tag"},"Ã—",8,fe)]))),128))])):V("",!0),e[21]||(e[21]=t("small",{class:"form-text text-muted"},"Press Enter or comma to add a tag.",-1))]),t("div",ye,[d(f,{type:"submit",variant:"success"},{default:r(()=>e[22]||(e[22]=[p("Save Details")])),_:1}),d(g,{to:{name:"my-sets"}},{default:r(()=>[d(f,{type:"button",variant:"light"},{default:r(()=>e[23]||(e[23]=[p("Cancel")])),_:1})]),_:1})])],32)]),_:1},512),[[I,w.value==="modify"]]),v(d($,{class:"tab-content"},{default:r(()=>[t("div",we,[e[25]||(e[25]=t("h3",null,"Questions in this Set",-1)),d(f,{variant:"success",onClick:R,size:"sm"},{default:r(()=>e[24]||(e[24]=[p("Add New Question Manually")])),_:1})]),t("div",Ce,[v(t("select",{"onUpdate:modelValue":e[6]||(e[6]=s=>n.value.type=s)},e[26]||(e[26]=[t("option",{value:""},"All Question Types",-1),t("option",null,"MCQ",-1),t("option",null,"TEXT",-1)]),512),[[D,n.value.type]]),v(t("select",{"onUpdate:modelValue":e[7]||(e[7]=s=>n.value.answerType=s)},e[27]||(e[27]=[t("option",{value:""},"All Answer Types",-1),t("option",null,"SINGLE",-1),t("option",null,"MULTIPLE",-1)]),512),[[D,n.value.answerType]]),v(t("select",{"onUpdate:modelValue":e[8]||(e[8]=s=>n.value.tag=s)},[e[28]||(e[28]=t("option",{value:""},"All Tags",-1)),(l(!0),u(A,null,q(W.value,s=>(l(),u("option",{key:s},c(s),1))),128))],512),[[D,n.value.tag]]),v(t("input",{type:"text",placeholder:"Search Text/Answers...","onUpdate:modelValue":e[9]||(e[9]=s=>n.value.search=s)},null,512),[[x,n.value.search]])]),E.value?(l(),u("p",Me,"Loading questions...")):G.value.length===0?(l(),u("p",Se,"No questions match filters or none added yet.")):(l(),u("div",xe,[(l(!0),u(A,null,q(G.value,s=>(l(),ne($,{key:s.id,class:"question-item"},{footer:r(()=>[d(f,{variant:"warning",size:"sm",onClick:y=>X(s.id)},{default:r(()=>e[30]||(e[30]=[p("Edit")])),_:2},1032,["onClick"]),d(f,{variant:"danger",size:"sm",onClick:y=>H(s.id)},{default:r(()=>e[31]||(e[31]=[p("Delete")])),_:2},1032,["onClick"])]),default:r(()=>[t("div",ke,[t("span",Te,"ID: "+c(s.id),1),t("div",null,[(l(!0),u(A,null,q(s.tags,y=>(l(),u("span",{key:y,class:"tag q-tag"},c(y),1))),128)),t("span",be,c(s.questionType)+" / "+c(s.answerType),1)])]),t("p",Ae,c(s.text),1),s.options&&s.options.length?(l(),u("ul",qe,[(l(!0),u(A,null,q(s.options,(y,b)=>(l(),u("li",{key:b,class:le({correct:s.correctAnswers.includes(y)})},c(y),3))),128))])):!s.options||s.options.length===0?(l(),u("p",Qe,[e[29]||(e[29]=t("strong",null,"Answer:",-1)),p(" "+c(s.correctAnswers.join(", ")),1)])):V("",!0)]),_:2},1024))),128))]))]),_:1},512),[[I,w.value==="questions"]]),v(d($,{class:"tab-content"},{default:r(()=>[t("form",{onSubmit:L(z,["prevent"])},[e[38]||(e[38]=t("h3",null,"Generate Questions with AI",-1)),t("div",$e,[e[32]||(e[32]=t("label",{for:"aiTopic"},"Topic *",-1)),v(t("input",{type:"text",id:"aiTopic","onUpdate:modelValue":e[10]||(e[10]=s=>i.value.topic=s),placeholder:"e.g., World Capitals, Basic Chemistry, Vue.js Lifecycle",required:""},null,512),[[x,i.value.topic]])]),t("div",Ne,[t("div",Ee,[e[33]||(e[33]=t("label",{for:"aiMixWrite"},"Write Answer:",-1)),v(t("input",{type:"number",id:"aiMixWrite",min:"0","onUpdate:modelValue":e[11]||(e[11]=s=>i.value.mixCount.write=s)},null,512),[[x,i.value.mixCount.write,void 0,{number:!0}]])]),t("div",he,[e[34]||(e[34]=t("label",{for:"aiMixMcqSingle"},"MCQ (Single):",-1)),v(t("input",{type:"number",id:"aiMixMcqSingle",min:"0","onUpdate:modelValue":e[12]||(e[12]=s=>i.value.mixCount.mcqSingle=s)},null,512),[[x,i.value.mixCount.mcqSingle,void 0,{number:!0}]])]),t("div",Ie,[e[35]||(e[35]=t("label",{for:"aiMixMcqMulti"},"MCQ (Multi):",-1)),v(t("input",{type:"number",id:"aiMixMcqMulti",min:"0","onUpdate:modelValue":e[13]||(e[13]=s=>i.value.mixCount.mcqMulti=s)},null,512),[[x,i.value.mixCount.mcqMulti,void 0,{number:!0}]])]),t("div",Ve," Total: "+c(S.value),1)]),t("div",Le,[d(f,{type:"submit",variant:"primary",disabled:S.value===0||!i.value.topic},{default:r(()=>[p(" Generate "+c(S.value)+" Questions ",1)]),_:1},8,["disabled"]),d(f,{type:"button",variant:"secondary",onClick:j,disabled:!i.value.topic},{default:r(()=>e[36]||(e[36]=[p(" Copy AI Prompt ")])),_:1},8,["disabled"])]),M.value?(l(),u("div",De,[t("p",null,[e[37]||(e[37]=t("strong",null,"Status:",-1)),p(" "+c(M.value),1)])])):V("",!0)],32)]),_:1},512),[[I,w.value==="generate"]])])}}}),Fe=ue(Ue,[["__scopeId","data-v-75052449"]]);export{Fe as default};
